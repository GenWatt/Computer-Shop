{"version":3,"sources":["duck/actions/search.ts","duck/actions/searchResult.ts","duck/allActions.ts","duck/actions/settings.ts","duck/types/searchResultTypes.ts","themes/mixins.ts","duck/types/search.ts","config/searchOptions.ts","components/Loader/LoaderStyle.ts","components/Loader/Loader.tsx","duck/types/settingsTypes.ts","components/Search/SearchStyles.ts","components/Search/Search.tsx","components/Overlay/OverlayStyle.ts","components/Overlay/Overlay.tsx","helpers/randomSearch.ts","components/Video/VideosStyle.ts","components/Video/Videos.tsx","components/Settings/SettingsStyles.ts","components/Settings/Settings.tsx","components/PlayVideo/PlayVideoStyle.ts","components/PlayVideo/PlayVideo.tsx","components/Error/ErrorStyles.ts","components/Error/Error.tsx","components/Header/HeaderStyles.ts","components/Header/Header.tsx","themes/Themes.ts","themes/GlobalStyles.ts","App.tsx","duck/reducers/searchReducer.ts","duck/reducers/searchResultReducer.ts","duck/reducers/settingsReducer.ts","duck/allReducers.ts","helpers/useFetchAPI.ts","duck/sagas/fetchSaga.ts","index.tsx"],"names":["customSearch","search","type","CUSTOM_SEARCH","payload","randomSearch","RANDOM_SEARCH","setBgVideo","bgVideo","SET_BG_VIDEO","addVideosToState","videos","FETCH_VIDEOS","fetchVideos","searchValue","ADD_VIDEOS","addCommentsToState","items","FETCH_COMMENTS","fetchComments","parameters","ADD_COMMENTS","addErrorsAction","error","ADD_ERRORS","clearComments","clear","CLEAR_COMMENTS","clearVideos","CLEAR_VIDEOS","allActions","searchActions","searchResultsActions","settingsActions","setSettings","settings","SET_SETTINGS","centerFlex","css","button","defaultSearchOptions","MAX_COMMNETS","MAX_VIDEOS","OFFSET_TO_LOAD_COMMENT","LoaderBox","styled","div","loaderAnimation","keyframes","Dot","span","Loader","SearchForm","form","InputBox","theme","boxShadows","common","Label","label","isFocus","fontSizes","small","SearchInput","input","attrs","colors","primary","secondary","fontColors","mainText","SearchBtn","inset","React","memo","useState","setSearch","setFocus","dispatch","useDispatch","onSubmit","e","preventDefault","searchForFilms","htmlFor","name","id","onChange","target","value","onFocus","onBlur","className","OverlayBox","aside","OverlayVideo","iframe","Overlay","src","url","title","randomNumber","Math","floor","random","length","ContainerVideo","Header","h1","large","ContainerVideoSection","section","VideosSection","lazy","renderFilms","state","useSelector","searchResult","isLoading","videoBackground","useEffect","flat","map","item","video","fallback","key","videoId","SettingsSection","motion","SettingsHeader","xl","SettingsForm","InputBoxes","FormInput","SettingsBtn","isShow","showSettingsVariants","initial","clipPath","scale","animate","exit","inputsVariants","opacity","y","Settings","handleSettings","checked","localStorage","setItem","JSON","stringify","variants","transition","duration","staggerChildren","delayChildren","action","darkMode","disabled","PlayVideoSection","MainVideo","allow","allowFullScreen","AsideVideos","Comment","PlayVideo","useParams","to","vertical","ErrorSection","custom","ErrorMessage","errorColor","neumorphismRed","fadeErrorMsgVariant","top","Error","errors","message","style","fontSize","code","margin","ContainerHeader","rotateSettingsIcon","HeaderSettingsBtn","opositeColorLowAlpha","HeaderBrand","header","setShowSettings","showSettings","textDecoration","onClick","lightTheme","commentGradient","lowAlpha","medium","darkTheme","GlobalStyle","createGlobalStyle","App","location","useLocation","userSettings","getItem","parsedSettings","parse","component","path","Videos","searchState","searchReducer","initialState","nextPageToken","comments","searchResultReducer","IsLoading","settingsReducer","rootReducer","combineReducers","FetchData","mainURL","API_KEY","videosURL","commentsURL","this","process","URL","fetch","json","massage","getVideos","getComments","defaultError","dispatchError","watchAll","callApi","data","put","all","takeLatest","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8ef1819.chunk.js","sourcesContent":["import {\r\n  searchAction,\r\n  CUSTOM_SEARCH,\r\n  RANDOM_SEARCH,\r\n  SET_BG_VIDEO,\r\n  BgVideo,\r\n} from \"../types/search\";\r\n\r\nconst customSearch = (search: string): searchAction => ({\r\n  type: CUSTOM_SEARCH,\r\n  payload: search,\r\n});\r\n\r\nconst randomSearch = (search: string): searchAction => ({\r\n  type: RANDOM_SEARCH,\r\n  payload: search,\r\n});\r\n\r\nconst setBgVideo = (bgVideo: BgVideo): searchAction => ({\r\n  type: SET_BG_VIDEO,\r\n  payload: bgVideo,\r\n});\r\n\r\nexport default {\r\n  customSearch,\r\n  randomSearch,\r\n  setBgVideo,\r\n};\r\n","import {\r\n  searchResultAction,\r\n  ADD_VIDEOS,\r\n  FETCH_VIDEOS,\r\n  FETCH_COMMENTS,\r\n  ADD_COMMENTS,\r\n  IError,\r\n  ADD_ERRORS,\r\n  CLEAR_COMMENTS,\r\n  CLEAR_VIDEOS,\r\n} from \"../types/searchResultTypes\";\r\nimport { IVideosState } from \"../types/searchResultTypes\";\r\nimport { ICommentState } from \"../reducers/searchResultReducer\";\r\n\r\nconst fetchVideos = (searchValue: string): searchResultAction => ({\r\n  type: ADD_VIDEOS,\r\n  payload: searchValue,\r\n});\r\n\r\nconst fetchComments = (parameters: {\r\n  videoId: string;\r\n  nextPageToken?: string;\r\n}): searchResultAction => ({\r\n  type: ADD_COMMENTS,\r\n  payload: parameters,\r\n});\r\n\r\nconst addVideosToState = (videos: IVideosState): searchResultAction => ({\r\n  type: FETCH_VIDEOS,\r\n  payload: videos,\r\n});\r\n\r\nconst clearVideos = (clear: boolean): searchResultAction => ({\r\n  type: CLEAR_VIDEOS,\r\n  payload: clear,\r\n});\r\n\r\nconst addCommentsToState = (items: ICommentState): searchResultAction => ({\r\n  type: FETCH_COMMENTS,\r\n  payload: items,\r\n});\r\n\r\nconst clearComments = (clear: boolean): searchResultAction => ({\r\n  type: CLEAR_COMMENTS,\r\n  payload: clear,\r\n});\r\n\r\nconst addErrorsAction = (error: IError): searchResultAction => ({\r\n  type: ADD_ERRORS,\r\n  payload: error,\r\n});\r\n\r\nexport default {\r\n  addVideosToState,\r\n  fetchVideos,\r\n  addCommentsToState,\r\n  fetchComments,\r\n  addErrorsAction,\r\n  clearComments,\r\n  clearVideos,\r\n};\r\n","import searchActions from \"./actions/search\";\r\nimport searchResultsActions from \"./actions/searchResult\";\r\nimport settingsActions from \"./actions/settings\";\r\n\r\nconst allActions = {\r\n  searchActions,\r\n  searchResultsActions,\r\n  settingsActions,\r\n};\r\n\r\nexport default allActions;\r\n","import {\r\n  SET_SETTINGS,\r\n  SettingsActions,\r\n  ISettings,\r\n} from \"../types/settingsTypes\";\r\n\r\nconst setSettings = (settings: ISettings): SettingsActions => ({\r\n  type: SET_SETTINGS,\r\n  payload: settings,\r\n});\r\n\r\nexport default { setSettings };\r\n","import { ICommentState } from \"../reducers/searchResultReducer\";\r\nexport const FETCH_VIDEOS = \"FETCH_VIDEOS\";\r\nexport const ADD_VIDEOS = \"ADD_RESULTS\";\r\nexport const CLEAR_VIDEOS = \"CLEAR_VIDEOS\";\r\nexport const FETCH_COMMENTS = \"FETCH_COMMENTS\";\r\nexport const ADD_COMMENTS = \"ADD_COMMENTS\";\r\nexport const CLEAR_COMMENTS = \"CLEAR_COMMENTS\";\r\nexport const ADD_ERRORS = \"ADD_ERRORS\";\r\n\r\nexport interface Iid {\r\n  videoId: string;\r\n}\r\n\r\nexport interface Isnippet {\r\n  channelTitle: string;\r\n  description: string;\r\n  thumbnails: {\r\n    default: { url: string };\r\n    medium: { url: string };\r\n    high: { url: string };\r\n  };\r\n}\r\n\r\nexport interface IComment {\r\n  snippet: {\r\n    topLevelComment: {\r\n      snippet: {\r\n        textOriginal: string;\r\n        likeCount: number;\r\n        authorProfileImageUrl: string;\r\n        authorDisplayName: string;\r\n        publishedAt: string;\r\n      };\r\n    };\r\n  };\r\n  id: string;\r\n}\r\n\r\nexport interface IItem {\r\n  id: Iid;\r\n  snippet: Isnippet;\r\n}\r\n\r\nexport interface IVideosState {\r\n  items: { items: IItem[] }[];\r\n  isLoading: boolean;\r\n  nextPageToken: string;\r\n}\r\n\r\nexport interface IOptions {\r\n  parameters: string;\r\n  queries?: string;\r\n  type: string;\r\n}\r\n\r\nexport interface IError {\r\n  message: string;\r\n  error: { message?: string; code?: number; error: boolean };\r\n}\r\n\r\nexport interface AddVideoToState {\r\n  type: typeof ADD_VIDEOS;\r\n  payload: string;\r\n}\r\n\r\nexport interface AddErrorsAction {\r\n  type: typeof ADD_ERRORS;\r\n  payload: IError;\r\n}\r\n\r\nexport interface AddCommentsToState {\r\n  type: typeof ADD_COMMENTS;\r\n  payload: { videoId: string; nextPageToken?: string };\r\n}\r\n\r\nexport interface FetchVideos {\r\n  type: typeof FETCH_VIDEOS;\r\n  payload: IVideosState;\r\n}\r\n\r\nexport interface FetchComments {\r\n  type: typeof FETCH_COMMENTS;\r\n  payload: ICommentState;\r\n}\r\n\r\nexport interface ClearVideos {\r\n  type: typeof CLEAR_VIDEOS;\r\n  payload: boolean;\r\n}\r\n\r\nexport interface ClearComments {\r\n  type: typeof CLEAR_COMMENTS;\r\n  payload: boolean;\r\n}\r\n\r\nexport type searchResultAction =\r\n  | AddVideoToState\r\n  | FetchVideos\r\n  | FetchComments\r\n  | AddCommentsToState\r\n  | AddErrorsAction\r\n  | ClearComments\r\n  | ClearVideos;\r\n","import { css } from \"styled-components\";\r\n\r\nexport const centerFlex = css`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const button = css`\r\n  cursor: pointer;\r\n  border: none;\r\n  outline: none;\r\n`;\r\n","export const CUSTOM_SEARCH = \"CUSTOM_SEARCH\";\r\nexport const RANDOM_SEARCH = \"RANDOM_SEARCH\";\r\nexport const SET_BG_VIDEO = \"SET_BG_VIDEO\";\r\n\r\nexport interface BgVideo {\r\n  url: string;\r\n  title: string;\r\n}\r\n\r\ninterface randomSearchAction {\r\n  type: typeof RANDOM_SEARCH;\r\n  payload: string;\r\n}\r\n\r\ninterface customSearchAction {\r\n  type: typeof CUSTOM_SEARCH;\r\n  payload: string;\r\n}\r\n\r\ninterface SetBgVideoAction {\r\n  type: typeof SET_BG_VIDEO;\r\n  payload: BgVideo;\r\n}\r\n\r\nexport type searchAction =\r\n  | customSearchAction\r\n  | randomSearchAction\r\n  | SetBgVideoAction;\r\n","export const defaultSearchOptions: string[] = [\r\n  \"music\",\r\n  \"football\",\r\n  \"animals\",\r\n  \"COVID-19\",\r\n  \"film trailer\",\r\n];\r\n\r\nexport const MAX_COMMNETS: number = 15;\r\nexport const MAX_VIDEOS: number = 6;\r\nexport const OFFSET_TO_LOAD_COMMENT: number = 200;\r\n","import styled, { keyframes } from \"styled-components\";\r\nimport { centerFlex } from \"../../themes/mixins\";\r\n\r\nexport const LoaderBox = styled.div`\r\n  ${centerFlex};\r\n`;\r\n\r\nconst loaderAnimation = keyframes`\r\n  0%,\r\n  100% {\r\n    transform: scale(0.7) translateY(0);\r\n  }\r\n\r\n  25% {\r\n    transform: scale(1) translateY(20px);\r\n  }\r\n\r\n  50% {\r\n    transform: scale(0.4) translateY(-20px);\r\n  }\r\n`;\r\n\r\nexport const Dot = styled.span`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  background-color: grey;\r\n  margin-left: 25px;\r\n  animation: ${loaderAnimation} 2s ease-in-out infinite;\r\n\r\n  &:nth-child(1) {\r\n    animation-delay: 0.3s;\r\n  }\r\n\r\n  &:last-child {\r\n    animation-delay: 0.6s;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { LoaderBox, Dot } from \"./LoaderStyle\";\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <LoaderBox>\r\n      <Dot />\r\n      <Dot />\r\n      <Dot />\r\n    </LoaderBox>\r\n  );\r\n}\r\n","export const SET_SETTINGS = \"SET_SETTINGS\";\r\n\r\nexport interface ISettings {\r\n  settings: { darkMode: boolean; videoBackground: boolean };\r\n}\r\n\r\ninterface SetSettings {\r\n  type: typeof SET_SETTINGS;\r\n  payload: ISettings;\r\n}\r\n\r\nexport type SettingsActions = SetSettings;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SearchForm = styled.form`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const InputBox = styled.div`\r\n  position: relative;\r\n  min-width: 70%;\r\n  height: 35px;\r\n  margin: 15px;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    ${({ theme }) => theme.boxShadows.common};\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label<{ isFocus: boolean }>`\r\n  position: absolute;\r\n  top: 0;\r\n  left: ${({ isFocus }) => (isFocus ? \" 50%;\" : \"10px\")};\r\n  font-size: ${({ theme }) => theme.fontSizes.small};\r\n  transition: transform 0.4s ease, left 0.4s ease-in-out;\r\n  ${({ isFocus }) => isFocus && \"transform: translateX(-50%);\"};\r\n`;\r\n\r\nexport const SearchInput = styled.input.attrs({ type: \"text\" })`\r\n  width: 100%;\r\n  height: 35px;\r\n  padding: 10px 5px 0 10px;\r\n  border: none;\r\n  background-image: ${({ theme }) =>\r\n    `linear-gradient(45deg, ${theme.colors.primary},${theme.colors.secondary});`};\r\n  box-shadow: ${({ theme }) => theme.boxShadows.common};\r\n  border-top-left-radius: 10px;\r\n  border-bottom-left-radius: 10px;\r\n  color: ${({ theme }) => theme.fontColors.mainText};\r\n  outline: none;\r\n  transition: box-shadow 0.7s ease-in-out;\r\n`;\r\n\r\nexport const SearchBtn = styled.button.attrs({ type: \"submit\" })`\r\n  background-color: ${({ theme }) => theme.colors.primary};\r\n  border-top-right-radius: 10px;\r\n  border-bottom-right-radius: 10px;\r\n  box-shadow: ${({ theme }) => theme.boxShadows.common},\r\n    ${({ theme }) => theme.boxShadows.inset};\r\n  height: 100%;\r\n  width: 50px;\r\n  margin: 15px 0;\r\n  padding: 10px;\r\n  outline: none;\r\n  cursor: pointer;\r\n  border: none;\r\n  border-left: 1px solid ${({ theme }) => theme.colors.primary};\r\n  color: ${({ theme }) => theme.fontColors.mainText};\r\n  transition: box-shadow 0.4s ease-in-out;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    box-shadow: ${({ theme }) => theme.boxShadows.common};\r\n  }\r\n`;\r\n","import React, { useState, FormEvent } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport allActions from \"../../duck/allActions\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport {\r\n  SearchForm,\r\n  InputBox,\r\n  Label,\r\n  SearchInput,\r\n  SearchBtn,\r\n} from \"./SearchStyles\";\r\n\r\nfunction Search() {\r\n  const [search, setSearch] = useState<string>(\"\");\r\n  const [isFocus, setFocus] = useState<boolean>(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const searchForFilms = (e: FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (search) {\r\n      dispatch(allActions.searchActions.customSearch(search));\r\n      dispatch(allActions.searchResultsActions.clearVideos(true));\r\n    }\r\n  };\r\n\r\n  const activeLabel = () => {\r\n    setFocus(true);\r\n  };\r\n\r\n  const disactiveLabel = () => {\r\n    if (!search) setFocus(false);\r\n  };\r\n\r\n  return (\r\n    <SearchForm onSubmit={(e) => searchForFilms(e)}>\r\n      <InputBox>\r\n        <Label htmlFor=\"search\" isFocus={isFocus}>\r\n          Search For Films...\r\n        </Label>\r\n        <SearchInput\r\n          name=\"search\"\r\n          id=\"search\"\r\n          onChange={(e) => setSearch(e.target.value)}\r\n          onFocus={() => activeLabel()}\r\n          onBlur={() => disactiveLabel()}\r\n          value={search}\r\n        />\r\n      </InputBox>\r\n      <SearchBtn>\r\n        <SearchIcon className=\"submit__icon\" />\r\n      </SearchBtn>\r\n    </SearchForm>\r\n  );\r\n}\r\n\r\nexport default React.memo(Search);\r\n","import styled from \"styled-components\";\r\n\r\nexport const OverlayBox = styled.aside`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  opacity: 0.3;\r\n  z-index: -1;\r\n`;\r\n\r\nexport const OverlayVideo = styled.iframe`\r\n  width: 100vw;\r\n  height: 100vh;\r\n`;\r\n","import React from \"react\";\r\nimport { BgVideo } from \"../../duck/types/search\";\r\nimport { OverlayBox, OverlayVideo } from \"./OverlayStyle\";\r\n\r\nexport default function Overlay({ bgVideo }: { bgVideo: BgVideo }) {\r\n  return (\r\n    <OverlayBox>\r\n      <OverlayVideo src={bgVideo.url} title={bgVideo.title}></OverlayVideo>\r\n    </OverlayBox>\r\n  );\r\n}\r\n","import { defaultSearchOptions } from \"../config/searchOptions\";\r\n\r\nfunction randomSearch() {\r\n  const randomNumber: number = Math.floor(\r\n    Math.random() * defaultSearchOptions.length\r\n  );\r\n\r\n  return defaultSearchOptions[randomNumber];\r\n}\r\n\r\nexport default randomSearch;","import styled from \"styled-components\";\r\n\r\nexport const ContainerVideo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: inherit;\r\n`;\r\n\r\nexport const Header = styled.h1`\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n  font-size: ${({ theme }) => theme.fontSizes.large};\r\n`;\r\n\r\nexport const ContainerVideoSection = styled.section`\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n`;\r\n","import React, { useEffect, Suspense } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Loader from \"../Loader/Loader\";\r\nimport Search from \"../Search/Search\";\r\nimport Overlay from \"../Overlay/Overlay\";\r\nimport randomSearch from \"../../helpers/randomSearch\";\r\n\r\nimport allActions from \"../../duck/allActions\";\r\nimport { RootState } from \"../../duck/allReducers\";\r\n\r\nimport { ContainerVideo, Header, ContainerVideoSection } from \"./VideosStyle\";\r\nconst VideosSection = React.lazy(() => import(\"../VideoSection/VideosSection\"));\r\n\r\nconst Videos = () => {\r\n  const state: RootState = useSelector((state: RootState) => state);\r\n  const { bgVideo, search } = state.search;\r\n  const { items, isLoading } = state.searchResult.videos;\r\n  const { videoBackground } = state.settings.settings;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(allActions.searchResultsActions.clearVideos(true));\r\n    dispatch(allActions.searchActions.randomSearch(randomSearch()));\r\n  }, [dispatch]);\r\n\r\n  let renderFilms;\r\n\r\n  useEffect(() => {\r\n    if (!search) return;\r\n    dispatch(allActions.searchResultsActions.fetchVideos(search));\r\n  }, [search, dispatch]);\r\n\r\n  const videos = items\r\n    .flat(1)\r\n    .map((item) => item.items)\r\n    .flat(1);\r\n\r\n  if (!isLoading && videos.length) {\r\n    renderFilms = (\r\n      <ContainerVideoSection>\r\n        {videos.map((video) => (\r\n          <Suspense fallback={<Loader />} key={video.id.videoId}>\r\n            <VideosSection video={video} />\r\n          </Suspense>\r\n        ))}\r\n      </ContainerVideoSection>\r\n    );\r\n  }\r\n  return (\r\n    <ContainerVideo>\r\n      <Search />\r\n      {videoBackground && bgVideo && <Overlay bgVideo={bgVideo} />}\r\n      <header>\r\n        <Header>{search}</Header>\r\n      </header>\r\n      {renderFilms}\r\n      {isLoading && <Loader />}\r\n    </ContainerVideo>\r\n  );\r\n};\r\n\r\nexport default React.memo(Videos);\r\n","import styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport { centerFlex, button } from \"../../themes/mixins\";\r\n\r\nexport const SettingsSection = styled(motion.section)`\r\n  ${centerFlex};\r\n  flex-direction: column;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  z-index: 2;\r\n  transform-origin: top right;\r\n  padding: ${({ theme }) => theme.colors};\r\n  background-image: ${({ theme }) =>\r\n    `linear-gradient(45deg, ${theme.colors.primary}, ${theme.colors.secondary})`};\r\n`;\r\n\r\nexport const SettingsHeader = styled.h1`\r\n  font-size: ${({ theme }) => theme.fontSizes.xl};\r\n  letter-spacing: 2px;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nexport const SettingsForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nexport const InputBoxes = styled(motion.div)`\r\n  width: 90%;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const FormInput = styled.input.attrs({ type: \"checkbox\" })`\r\n  justify-self: self-end;\r\n  margin-right: 30px;\r\n  width: 80px;\r\n  height: 25px;\r\n  position: relative;\r\n\r\n  &::before {\r\n    content: \"\";\r\n    background-color: white;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 10px;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease-out;\r\n  }\r\n\r\n  &:checked::before {\r\n    background-color: black;\r\n  }\r\n\r\n  &::after {\r\n    content: \"\";\r\n    background-color: rgb(63, 63, 231);\r\n    width: 25px;\r\n    height: 25px;\r\n    border-radius: 50%;\r\n    position: absolute;\r\n    left: 65%;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    cursor: pointer;\r\n    transition: background-color 0.4s ease-in, left 0.5s ease-in-out;\r\n  }\r\n\r\n  &:checked::after {\r\n    background-color: white;\r\n    left: 0;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  justify-self: flex-start;\r\n  align-self: center;\r\n`;\r\n\r\nexport const SettingsBtn = styled.button.attrs({ type: \"submit\" })<{\r\n  isShow: boolean;\r\n}>`\r\n  ${button};\r\n  background-image: linear-gradient(45deg, rgb(31, 120, 236), rgb(8, 123, 218));\r\n  position: fixed;\r\n  bottom: 30px;\r\n  left: 50%;\r\n  ${({ isShow }) =>\r\n    isShow\r\n      ? \"transform: scale(1) translate(-50%, 0);\"\r\n      : \"transform: scale(0) translateY(100px);\"}\r\n  width: 100px;\r\n  height: 35px;\r\n  border-radius: 10px;\r\n  padding: 5px;\r\n  transform-origin: center center;\r\n  transition: transform 0.4s ease-in-out;\r\n  color: white;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    transform: scaleX(1.1) translate(-50%, 0);\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { RootState } from \"../../duck/allReducers\";\r\nimport { ISettings } from \"../../duck/types/settingsTypes\";\r\nimport allActions from \"../../duck/allActions\";\r\nimport {\r\n  SettingsSection,\r\n  SettingsHeader,\r\n  SettingsForm,\r\n  InputBoxes,\r\n  FormInput,\r\n  Label,\r\n  SettingsBtn,\r\n} from \"./SettingsStyles\";\r\n\r\nconst showSettingsVariants = {\r\n  initial: {\r\n    clipPath: \"circle(0%)\",\r\n    scale: 0,\r\n  },\r\n  animate: {\r\n    scale: 1,\r\n    clipPath: \"circle(75%)\",\r\n  },\r\n  exit: {\r\n    scale: 0,\r\n    clipPath: \"circle(0%)\",\r\n  },\r\n};\r\nconst inputsVariants = {\r\n  initial: {\r\n    opacity: 0,\r\n    y: 20,\r\n  },\r\n  animate: {\r\n    opacity: 1,\r\n    y: 0,\r\n  },\r\n};\r\n\r\nexport default function Settings() {\r\n  const state = useSelector((state: RootState) => state.settings);\r\n  const [settings, setSettings] = useState<ISettings>(state);\r\n  const dispatch = useDispatch();\r\n  const handleSettings = (e: React.ChangeEvent<HTMLInputElement>) =>\r\n    setSettings({\r\n      ...settings,\r\n      settings: { ...settings.settings, [e.target.name]: e.target.checked },\r\n    });\r\n\r\n  useEffect(() => localStorage.setItem(\"userSettings\", JSON.stringify(state)), [\r\n    state,\r\n  ]);\r\n\r\n  return (\r\n    <SettingsSection\r\n      variants={showSettingsVariants}\r\n      animate=\"animate\"\r\n      initial=\"initial\"\r\n      exit=\"exit\"\r\n      transition={{ duration: 0.5, staggerChildren: 0.3, delayChildren: 0.2 }}\r\n    >\r\n      <header>\r\n        <SettingsHeader>Settings</SettingsHeader>\r\n      </header>\r\n      <SettingsForm\r\n        action=\"\"\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          settings &&\r\n            dispatch(allActions.settingsActions.setSettings(settings));\r\n        }}\r\n      >\r\n        <InputBoxes variants={inputsVariants}>\r\n          <FormInput\r\n            name=\"darkMode\"\r\n            id=\"switch-mode\"\r\n            checked={settings.settings.darkMode}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              handleSettings(e)\r\n            }\r\n          />\r\n          <Label htmlFor=\"switch-mode\">\r\n            Dark Mode {settings.settings.darkMode ? \" On\" : \" Off\"}\r\n          </Label>\r\n        </InputBoxes>\r\n        <InputBoxes variants={inputsVariants}>\r\n          <FormInput\r\n            name=\"videoBackground\"\r\n            id=\"video-background\"\r\n            checked={settings.settings.videoBackground}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              handleSettings(e)\r\n            }\r\n          />\r\n          <Label htmlFor=\"video-background\">\r\n            Video In Background\r\n            {settings.settings.videoBackground ? \" On\" : \" Off\"}\r\n          </Label>\r\n        </InputBoxes>\r\n        <SettingsBtn\r\n          isShow={JSON.stringify(state) !== JSON.stringify(settings)}\r\n          disabled={JSON.stringify(state) === JSON.stringify(settings)}\r\n        >\r\n          Save Changes\r\n        </SettingsBtn>\r\n      </SettingsForm>\r\n    </SettingsSection>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const PlayVideoSection = styled.section`\r\n  position: relative;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: minmax(50%, 30%);\r\n  grid-template-rows: 600px 1fr;\r\n  background-image: ${({ theme }) =>\r\n    `linear-gradient(45deg,${theme.colors.primary},${theme.colors.secondary})`};\r\n\r\n  @media only screen and (max-width: 610px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const MainVideo = styled.iframe.attrs({\r\n  allow: \"autoplay; encrypted-media;\",\r\n  allowFullScreen: true,\r\n})`\r\n  grid-column: 1/3;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 1;\r\n`;\r\n\r\nexport const AsideVideos = styled.aside`\r\n  display: grid;\r\n  grid-auto-rows: minmax(300px, 400px);\r\n  grid-gap: 5px;\r\n  margin-top: 10px;\r\n  margin-right: 10px;\r\n  place-items: center;\r\n\r\n  @media only screen and (max-width: 610px) {\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n","import React, { Suspense, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams, Redirect } from \"react-router-dom\";\r\n\r\nimport { RootState } from \"../../duck/allReducers\";\r\nimport allActions from \"../../duck/allActions\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport { PlayVideoSection, MainVideo, AsideVideos } from \"./PlayVideoStyle\";\r\nconst VideosSection = React.lazy(() => import(\"../VideoSection/VideosSection\"));\r\nconst Comment = React.lazy(() => import(\"../Comments/Comment\"));\r\n\r\nexport default function PlayVideo() {\r\n  const { videoId } = useParams<{ videoId: string }>();\r\n  const { items, isLoading } = useSelector(\r\n    (state: RootState) => state.searchResult.videos\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(allActions.searchResultsActions.clearComments(true));\r\n  }, [videoId, dispatch]);\r\n\r\n  if (isLoading) {\r\n    dispatch(allActions.searchActions.customSearch(\"\"));\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  const videos = items.map((item) => item.items).flat(1);\r\n\r\n  return (\r\n    <PlayVideoSection>\r\n      <MainVideo\r\n        src={`http://www.youtube.com/embed/${videoId}?autoplay=1`}\r\n        title={videoId}\r\n      ></MainVideo>\r\n      <Suspense fallback={<Loader />}>\r\n        <Comment videoId={videoId} />\r\n      </Suspense>\r\n      <AsideVideos>\r\n        <Suspense fallback={<Loader />}>\r\n          {videos.map((video) => {\r\n            if (video.id.videoId === videoId) return null;\r\n            return (\r\n              <VideosSection\r\n                video={video}\r\n                key={video.id.videoId}\r\n                vertical={true}\r\n              />\r\n            );\r\n          })}\r\n        </Suspense>\r\n      </AsideVideos>\r\n    </PlayVideoSection>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport { centerFlex } from \"../../themes/mixins\";\r\n\r\nexport const ErrorSection = motion.custom(styled.section`\r\n  width: 100%;\r\n  position: fixed;\r\n  left: 0;\r\n  opacity: 0;\r\n  color: white;\r\n  font-weight: bold;\r\n  z-index: 1000;\r\n  ${centerFlex};\r\n  pointer-events: none;\r\n`);\r\n\r\nexport const ErrorMessage = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.errorColor};\r\n  width: 70%;\r\n  text-align: center;\r\n  border-radius: 5px;\r\n  box-shadow: ${({ theme }) => theme.boxShadows.neumorphismRed};\r\n`;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../duck/allReducers\";\r\nimport { ErrorSection, ErrorMessage } from \"./ErrorStyles\";\r\n\r\nconst fadeErrorMsgVariant = {\r\n  initial: {\r\n    opacity: 0,\r\n    top: -100,\r\n  },\r\n  animate: {\r\n    opacity: 1,\r\n    top: 0,\r\n  },\r\n  exit: {\r\n    opacity: 0,\r\n    top: 100,\r\n  },\r\n};\r\n\r\nexport default function Error() {\r\n  const { errors } = useSelector((state: RootState) => state.searchResult);\r\n\r\n  return (\r\n    <ErrorSection\r\n      variants={fadeErrorMsgVariant}\r\n      animate=\"animate\"\r\n      initial=\"initial\"\r\n      exit=\"exit\"\r\n    >\r\n      <ErrorMessage>\r\n        {errors.message ? (\r\n          <p>{errors.message}</p>\r\n        ) : (\r\n          <>\r\n            <span style={{ fontSize: 1.6 + \"em\" }}>{errors.error.code}</span>\r\n            <p style={{ margin: 3 }}>{errors.error.message}</p>\r\n          </>\r\n        )}\r\n      </ErrorMessage>\r\n    </ErrorSection>\r\n  );\r\n}\r\n","import styled, { keyframes } from \"styled-components\";\r\nimport { centerFlex } from \"../../themes/mixins\";\r\n\r\nexport const ContainerHeader = styled.h1`\r\n  ${centerFlex};\r\n  color: ${({ theme }) => theme.fontColors.mainText};\r\n`;\r\n\r\nconst rotateSettingsIcon = keyframes`\r\n    0% {\r\n        transform: rotate(0) scale(1.5);\r\n    }\r\n\r\n    100% {\r\n        transform: rotate(360deg) scale(1.5);\r\n    }\r\n`;\r\n\r\nexport const HeaderSettingsBtn = styled.button`\r\n  ${centerFlex}\r\n  position: fixed;\r\n  top: 15px;\r\n  right: 15px;\r\n  width: 40px;\r\n  height: 40px;\r\n  z-index: 3;\r\n  cursor: pointer;\r\n  transform: scale(1.7);\r\n  background-color: transparent;\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 50%;\r\n  transition: background-color 0.4s ease;\r\n  color: ${({ theme }) => theme.fontColors.mainText};\r\n\r\n  &:hover {\r\n    animation: ${rotateSettingsIcon} 1.5s ease-in-out infinite;\r\n    background-color: ${({ theme }) => theme.colors.opositeColorLowAlpha};\r\n  }\r\n\r\n  @media only screen and (max-width: 490px) {\r\n    top: 5px;\r\n    right: 5px;\r\n  }\r\n\r\n  @media only screen and (max-width: 320px) {\r\n    right: 3px;\r\n    transform: scale(1.5);\r\n  }\r\n`;\r\n\r\nexport const HeaderBrand = styled.header`\r\n  font-size: ${({ theme }) => theme.fontSizes.xl};\r\n  font-weight: 800;\r\n  text-transform: uppercase;\r\n  letter-spacing: 4px;\r\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\r\n  text-shadow: ${({ theme }) => theme.boxShadows.common};\r\n  color: ${({ theme }) => theme.fontColors.mainText};\r\n\r\n  @media only screen and (max-width: 500px) {\r\n    font-size: ${({ theme }) => theme.fontSizes.large};\r\n  }\r\n`;\r\n","import React, { Dispatch, SetStateAction } from \"react\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport {\r\n  ContainerHeader,\r\n  HeaderBrand,\r\n  HeaderSettingsBtn,\r\n} from \"./HeaderStyles\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ninterface IShowSettings {\r\n  setShowSettings: Dispatch<SetStateAction<boolean>>;\r\n  showSettings: boolean;\r\n}\r\n\r\nexport default function Header({\r\n  setShowSettings,\r\n  showSettings,\r\n}: IShowSettings) {\r\n  return (\r\n    <ContainerHeader>\r\n      <NavLink to=\"/\" style={{ textDecoration: \"none\" }} title=\"Home\">\r\n        <HeaderBrand>adrianTube</HeaderBrand>\r\n      </NavLink>\r\n      <HeaderSettingsBtn\r\n        onClick={() => setShowSettings(!showSettings)}\r\n        name=\"settings\"\r\n      >\r\n        <SettingsIcon />\r\n      </HeaderSettingsBtn>\r\n    </ContainerHeader>\r\n  );\r\n}\r\n","export const lightTheme = {\r\n  colors: {\r\n    primary: \"rgb(236, 231, 231)\",\r\n    secondary: \"rgb(226, 226, 226)\",\r\n    commentGradient: \"linear-gradient(rgb(209, 209, 209), rgb(190, 180, 180))\",\r\n    lowAlpha: \"rgba(236, 231, 231, 0.3)\",\r\n    opositeColorLowAlpha: \"rgba(24, 24, 24, 0.3)\",\r\n    errorColor: \"rgb(197, 7, 7)\",\r\n  },\r\n  fontColors: {\r\n    mainText: \"rgb(20, 20, 20)\",\r\n  },\r\n  fontSizes: {\r\n    small: \"0.8em\",\r\n    medium: \"1.1em\",\r\n    large: \"1.7em\",\r\n    xl: \"3em\",\r\n  },\r\n  boxShadows: {\r\n    neumorphismRed: \"3px 3px 10px #00000085, -3px -3px 10px rgb(163, 105, 105)\",\r\n    common: \"-3px 3px 10px rgba(0,0,0,0.2), 3px -3px 10px rgba(255, 255, 255)\",\r\n    inset:\r\n      \"inset 3px 3px 20px rgba(0, 0, 0, 0.158), inset 0px -3px 20px rgba(0, 0, 0, 0.164)\",\r\n  },\r\n};\r\n\r\nexport const darkTheme = {\r\n  colors: {\r\n    primary: \"rgb(24, 24, 24)\",\r\n    secondary: \"rgb(36, 34, 34)\",\r\n    commentGradient: \"linear-gradient(rgb(59, 59, 59), rgb(73, 71, 71))\",\r\n    lowAlpha: \"rgba(24, 24, 24, 0.3)\",\r\n    opositeColorLowAlpha: \"rgba(236, 231, 231, 0.3)\",\r\n    errorColor: \"rgb(197, 7, 7)\",\r\n  },\r\n  fontColors: {\r\n    mainText: \"#f0efe6\",\r\n  },\r\n  fontSizes: {\r\n    small: \"0.8em\",\r\n    medium: \"1.1em\",\r\n    large: \"1.7em\",\r\n    xl: \"3em\",\r\n  },\r\n  boxShadows: {\r\n    neumorphismRed: \"3px 3px 10px #00000085, -3px -3px 10px rgb(163, 105, 105)\",\r\n    common: \"-3px 3px 10px black, 3px -3px 10px rgba(255, 255, 255, 0.247)\",\r\n    inset:\r\n      \"inset 3px 3px 20px rgba(255, 255, 255, 0.158), inset 0px -3px 20px rgba(255, 255, 255, 0.164)\",\r\n  },\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle<any>`\r\nhtml{\r\n  @media only screen and (max-width: 570px) {\r\n    font-size: 15px;\r\n  }\r\n}\r\n\r\nbody{\r\n  min-height: 100vh;\r\n  color:${({ theme }) => theme.fontColors.mainText};\r\n  background-image:${({ theme }) =>\r\n    `linear-gradient(45deg,${theme.colors.primary},${theme.colors.secondary})`};\r\n    margin: 0;\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n      sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    overflow-x:hidden;\r\n}\r\n\r\niframe{\r\n  border:none;\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React, { useState, useEffect } from \"react\";\nimport Videos from \"./components/Video/Videos\";\nimport Settings from \"./components/Settings/Settings\";\nimport PlayVideo from \"./components/PlayVideo/PlayVideo\";\nimport Error from \"./components/Error/Error\";\nimport Header from \"./components/Header/Header\";\n\nimport { AnimatePresence } from \"framer-motion\";\nimport { Route, Switch, useLocation, Redirect } from \"react-router-dom\";\n\nimport { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme } from \"./themes/Themes\";\nimport GlobalStyle from \"./themes/GlobalStyles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"./duck/allReducers\";\nimport { ISettings } from \"./duck/types/settingsTypes\";\nimport allActions from \"./duck/allActions\";\n\nconst App = (): JSX.Element => {\n  const [showSettings, setShowSettings] = useState<boolean>(false);\n  const { searchResult, settings } = useSelector((state: RootState) => state);\n  const { errors } = searchResult;\n  const { darkMode } = settings.settings;\n\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const userSettings = localStorage.getItem(\"userSettings\");\n    if (userSettings) {\n      const parsedSettings: ISettings = JSON.parse(userSettings);\n\n      dispatch(allActions.settingsActions.setSettings(parsedSettings));\n    }\n  }, [dispatch]);\n\n  return (\n    <ThemeProvider theme={darkMode ? darkTheme : lightTheme}>\n      <GlobalStyle />\n      <section className=\"container\">\n        <AnimatePresence>{errors.error.error && <Error />}</AnimatePresence>\n        <Header setShowSettings={setShowSettings} showSettings={showSettings} />\n        <AnimatePresence>{showSettings && <Settings />}</AnimatePresence>\n        <Switch location={location}>\n          <Route component={PlayVideo} path=\"/:videoId\" />\n          <Route component={Videos} path=\"/\" />\n          <Redirect to=\"/\" />\n        </Switch>\n      </section>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import {\r\n  searchAction,\r\n  CUSTOM_SEARCH,\r\n  RANDOM_SEARCH,\r\n  SET_BG_VIDEO,\r\n  BgVideo,\r\n} from \"../types/search\";\r\n\r\ninterface Istate {\r\n  search: string;\r\n  bgVideo: BgVideo;\r\n}\r\n\r\nconst searchState: Istate = {\r\n  search: \"\",\r\n  bgVideo: {\r\n    url: \"\",\r\n    title: \"\",\r\n  },\r\n};\r\n\r\nfunction searchReducer(state = searchState, action: searchAction) {\r\n  switch (action.type) {\r\n    case CUSTOM_SEARCH:\r\n      return { ...state, search: action.payload };\r\n    case RANDOM_SEARCH:\r\n      return { ...state, search: action.payload };\r\n    case SET_BG_VIDEO:\r\n      return {\r\n        ...state,\r\n        bgVideo: { url: action.payload.url, title: action.payload.title },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default searchReducer;\r\n","import {\r\n  searchResultAction,\r\n  FETCH_VIDEOS,\r\n  FETCH_COMMENTS,\r\n  IComment,\r\n  ADD_ERRORS,\r\n  ADD_COMMENTS,\r\n  ADD_VIDEOS,\r\n  IError,\r\n  CLEAR_COMMENTS,\r\n  CLEAR_VIDEOS,\r\n} from \"../types/searchResultTypes\";\r\nimport { IVideosState } from \"../types/searchResultTypes\";\r\n\r\nexport interface ICommentState {\r\n  items: { items: IComment }[];\r\n  nextPageToken: string;\r\n  isLoading: boolean;\r\n}\r\n\r\nexport interface IStateVideosInfo {\r\n  videos: IVideosState;\r\n  comments: ICommentState;\r\n  errors: IError;\r\n}\r\n\r\nconst initialState: IStateVideosInfo = {\r\n  videos: {\r\n    isLoading: true,\r\n    items: [],\r\n    nextPageToken: \"\",\r\n  },\r\n  comments: {\r\n    items: [],\r\n    isLoading: true,\r\n    nextPageToken: \"\",\r\n  },\r\n  errors: {\r\n    message: \"\",\r\n    error: {\r\n      error: false,\r\n    },\r\n  },\r\n};\r\n\r\nfunction searchResultReducer(state = initialState, action: searchResultAction) {\r\n  switch (action.type) {\r\n    case ADD_COMMENTS:\r\n      return { ...state, comments: { ...state.comments, isLoading: true } };\r\n    case CLEAR_COMMENTS:\r\n      if (action.payload)\r\n        return { ...state, comments: { items: [], isLoading: true } };\r\n      else return state;\r\n    case CLEAR_VIDEOS:\r\n      if (action.payload)\r\n        return { ...state, videos: { items: [], isLoading: true } };\r\n      else return state;\r\n    case ADD_VIDEOS:\r\n      return { ...state, videos: { ...state.videos, isLoading: true } };\r\n    case FETCH_VIDEOS:\r\n      return {\r\n        ...state,\r\n        videos: {\r\n          items: [...state.videos.items, action.payload],\r\n          IsLoading: action.payload.isLoading,\r\n        },\r\n      };\r\n    case FETCH_COMMENTS:\r\n      return {\r\n        ...state,\r\n        comments: {\r\n          items: [...state.comments.items, action.payload],\r\n          IsLoading: action.payload.isLoading,\r\n          nextPageToken: action.payload.nextPageToken,\r\n        },\r\n      };\r\n    case ADD_ERRORS:\r\n      return {\r\n        ...state,\r\n        errors: {\r\n          message: action.payload.message,\r\n          error: action.payload.error,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default searchResultReducer;\r\n","import { SET_SETTINGS, SettingsActions } from \"../types/settingsTypes\";\r\n\r\ninterface IState {\r\n  settings: { darkMode: boolean; videoBackground: boolean };\r\n}\r\n\r\nconst initialState = {\r\n  settings: { darkMode: true, videoBackground: true },\r\n};\r\n\r\nfunction settingsReducer(\r\n  state: IState = initialState,\r\n  action: SettingsActions\r\n) {\r\n  switch (action.type) {\r\n    case SET_SETTINGS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default settingsReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport searchReducer from \"./reducers/searchReducer\";\r\nimport searchResultReducer, {\r\n  IStateVideosInfo,\r\n} from \"./reducers/searchResultReducer\";\r\nimport settingsReducer from \"./reducers/settingsReducer\";\r\nimport { BgVideo } from \"./types/search\";\r\nimport { ISettings } from \"./types/settingsTypes\";\r\n\r\nexport interface RootState {\r\n  search: {\r\n    search: string;\r\n    bgVideo: BgVideo;\r\n    videoToPlay: string;\r\n  };\r\n  searchResult: IStateVideosInfo;\r\n  settings: ISettings;\r\n}\r\n\r\nexport const rootReducer = combineReducers({\r\n  search: searchReducer,\r\n  searchResult: searchResultReducer,\r\n  settings: settingsReducer,\r\n});\r\n","import { IItem, IComment } from \"../duck/types/searchResultTypes\";\r\nimport { Response, IFetchComments, IErrorFetch } from \"./useFetchInterface\";\r\nimport { MAX_VIDEOS, MAX_COMMNETS } from \"../config/searchOptions\";\r\n\r\nclass FetchData {\r\n  readonly mainURL: string;\r\n  readonly API_KEY: string;\r\n  readonly videosURL: string;\r\n  readonly commentsURL: string;\r\n\r\n  public constructor() {\r\n    /*\r\n     You can get API key for free from https://console.developers.google.com/apis/credentials?project=youtube-films-281016&folder=&organizationId=\r\n     */\r\n    this.API_KEY = `key=${process.env.REACT_APP_YOUTUBE_API_KEY}`;\r\n    this.mainURL = \"https://www.googleapis.com/youtube/v3/\";\r\n    this.videosURL = `${this.mainURL}search?${this.API_KEY}&type=video&part=snippet&maxResults=${MAX_VIDEOS}&fullscreen=1&q=`;\r\n    this.commentsURL = `${this.mainURL}commentThreads?${this.API_KEY}&part=snippet&maxResults=${MAX_COMMNETS}&videoId=`;\r\n  }\r\n\r\n  /**\r\n   * Get videos details from youtube API\r\n   */\r\n  public getVideos(\r\n    searchValue: string\r\n  ): Promise<Response<IItem> | IErrorFetch> {\r\n    return this.fetchVideos(searchValue);\r\n  }\r\n\r\n  /**\r\n   * Get comment details from youtube API\r\n   */\r\n  public getComments(\r\n    videoId: IFetchComments\r\n  ): Promise<Response<IComment> | IErrorFetch> {\r\n    return this.fetchComments(videoId);\r\n  }\r\n\r\n  private async fetchVideos(\r\n    searchValue: string\r\n  ): Promise<Response<IItem> | IErrorFetch> {\r\n    try {\r\n      const URL: string = this.videosURL + searchValue;\r\n      const videos: Response<IItem> = await (await fetch(URL)).json();\r\n\r\n      return videos;\r\n    } catch (e) {\r\n      return { massage: e.massage, error: true };\r\n    }\r\n  }\r\n\r\n  private async fetchComments({\r\n    videoId,\r\n    nextPageToken,\r\n  }: IFetchComments): Promise<Response<IComment> | IErrorFetch> {\r\n    try {\r\n      let URL: string = this.commentsURL + videoId;\r\n\r\n      if (nextPageToken) URL = URL + \"&pageToken=\" + nextPageToken;\r\n      const comments: Response<IComment> = await (await fetch(URL)).json();\r\n\r\n      return comments;\r\n    } catch (e) {\r\n      return { massage: e.massage, error: true };\r\n    }\r\n  }\r\n}\r\n\r\nexport default FetchData;\r\n","import { takeLatest, put, all } from \"redux-saga/effects\";\r\nimport FetchData from \"../../helpers/useFetchAPI\";\r\nimport {\r\n  ADD_VIDEOS,\r\n  ADD_COMMENTS,\r\n  AddCommentsToState,\r\n  AddVideoToState,\r\n} from \"../types/searchResultTypes\";\r\nimport allActions from \"../allActions\";\r\nimport { IErrorFetch } from \"../../helpers/useFetchInterface\";\r\n\r\nfunction* getVideos(action: AddVideoToState) {\r\n  const callApi = yield new FetchData();\r\n  const data = yield callApi.getVideos(action.payload);\r\n\r\n  if (data.error && data.massage) yield dispatchError(data);\r\n  else if (data.error && !data.massage) yield defaultError();\r\n  else if (!data.error)\r\n    yield put(allActions.searchResultsActions.addVideosToState(data));\r\n}\r\n\r\nfunction* getComments(action: AddCommentsToState) {\r\n  const callApi = yield new FetchData();\r\n  const data = yield callApi.getComments(action.payload);\r\n\r\n  if (data.error && data.massage) yield dispatchError(data);\r\n  else if (data.error && !data.massage) yield defaultError();\r\n  else if (!data.error)\r\n    yield put(allActions.searchResultsActions.addCommentsToState(data));\r\n}\r\n\r\nfunction* defaultError() {\r\n  yield put(\r\n    allActions.searchResultsActions.addErrorsAction({\r\n      message: \"Something goes wrong\",\r\n      error: { error: true },\r\n    })\r\n  );\r\n}\r\n\r\nfunction* dispatchError(data: IErrorFetch) {\r\n  yield put(\r\n    allActions.searchResultsActions.addErrorsAction({\r\n      message: data.massage,\r\n      error: { error: data.error },\r\n    })\r\n  );\r\n}\r\n\r\nfunction* watchAll() {\r\n  yield all([\r\n    takeLatest(ADD_VIDEOS, getVideos),\r\n    takeLatest(ADD_COMMENTS, getComments),\r\n  ]);\r\n}\r\n\r\nexport default watchAll;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { rootReducer } from \"./duck/allReducers\";\nimport watchAll from \"./duck/sagas/fetchSaga\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(watchAll);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}