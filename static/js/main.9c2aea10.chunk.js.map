{"version":3,"sources":["helpers/uniqueId.tsx","parameters/variants.ts","contexts/TaskReducer.tsx","contexts/TaskContext.tsx","contexts/AddToDone.tsx","components/DoneTasks.tsx","contexts/EditTaskContext.tsx","components/EditTask.tsx","components/YourTasks.tsx","components/Error.tsx","components/Success.tsx","components/AddTask.tsx","parameters/config.ts","components/Header.tsx","components/NavBar.tsx","ToDoList.tsx","index.tsx"],"names":["uniqueId","state","newId","checkIfIdExist","some","s","id","showFormVaraints","initial","scaleY","opacity","x","animate","exit","showDoneTaskVariants","y","expandVariants","height","successVaraints","errorVariants","rotate","scale","yourTaskVariants","staggerBtnVariantsConteiner","transition","staggerChildren","btnVariants","editVariants","visible","rotateX","hidden","left","action","type","payload","filter","task","isEdited","initialState","localStorage","getItem","JSON","parse","TaskContext","createContext","TaskContextProvider","children","useReducer","TaskReducer","dispatch","useEffect","setItem","stringify","Provider","value","addTask","deleteTask","editTask","title","description","date","newTask","map","DoneTasksContext","DoneTaskProvider","doneTaskState","addToDone","doneDate","Date","toLocaleString","deleteDoneTask","DoneTasks","useContext","useState","expand","setExpand","length","section","variants","className","index","article","key","positionTransition","div","button","onClick","DeleteForever","a","Cached","duration","ease","ExpandMore","p","EditTaskContext","EditTaskContextProvider","editedState","setEditMode","addTaskToEdit","EditTask","newValue","setNewValue","onSubmit","e","preventDefault","htmlFor","name","onChange","target","YourTasks","Done","Edit","Error","messages","push","message","li","Success","links","pathname","text","routes","path","component","setNewTask","error","setError","success","setSuccess","submited","setSubmit","successAlert","setTimeout","changeInputHandler","form","createTaskHandler","autoComplete","Header","NavBar","history","setHistory","update","setUpdate","prevNumber","currentNumber","location","useLocation","forEach","route","shift","link","exact","to","data-text","undefined","ToDoList","basename","render","exitBeforeEnter","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c2aea10.chunk.js","sourcesContent":["interface Istate {\r\n  id: number;\r\n}\r\n\r\nexport function uniqueId<T extends Istate>(state: T[]): number {\r\n  let newId: number = 0;\r\n\r\n  function checkIfIdExist() {\r\n    if (state.some((s) => s.id === newId)) {\r\n      newId++;\r\n      checkIfIdExist();\r\n    }\r\n  }\r\n  checkIfIdExist();\r\n\r\n  return newId;\r\n}\r\n","export const showFormVaraints = {\r\n  initial: { scaleY: 0, opacity: 0, x: 400 },\r\n  animate: { scaleY: 1, opacity: 1, x: 0 },\r\n  exit: { scaleY: 0 },\r\n};\r\n\r\nexport const showDoneTaskVariants = {\r\n  animate: { y: 0, opacity: 1 },\r\n  initial: { y: -100, opacity: 0 },\r\n  exit: { scaleY: 0 },\r\n};\r\n\r\nexport const expandVariants = {\r\n  animate: { height: \"auto\", opacity: 1 },\r\n  initial: { height: 0, opacity: 0 },\r\n  exit: { height: 0, opacity: 0 },\r\n};\r\n\r\nexport const successVaraints = {\r\n  animate: { y: 0 },\r\n  initial: { y: -100, x: \"-50%\" },\r\n  exit: { x: 100, opacity: 0 },\r\n};\r\n\r\nexport const errorVariants = {\r\n  animate: { opacity: 1, y: 0 },\r\n  initial: { opacity: 0, y: 40 },\r\n  exit: { rotate: 40, opacity: 0, scale: 0 },\r\n};\r\n\r\nexport const yourTaskVariants = {\r\n  initial: { scaleY: 0 },\r\n  animate: { scaleY: 1 },\r\n  exit: { scaleY: 0 },\r\n};\r\n\r\nexport const staggerBtnVariantsConteiner = {\r\n  initial: { opacity: 0, y: 40 },\r\n  animate: {\r\n    opacity: 1,\r\n    y: 0,\r\n    transition: {\r\n      staggerChildren: 0.2,\r\n    },\r\n  },\r\n};\r\n\r\nexport const btnVariants = {\r\n  initial: { opacity: 0, y: 40 },\r\n  animate: { opacity: 1, y: 0 },\r\n};\r\n\r\nexport const editVariants = {\r\n  visible: { opacity: 1, rotateX: 0 },\r\n  hidden: { opacity: 0, rotateX: 180 },\r\n  left: { opacity: 0.3, scale: 0 },\r\n};\r\n","import { ITask, IDoneTask } from \"../parameters/interfaces\";\r\n\r\nexport default (state: ITask[] | IDoneTask[], action: any) => {\r\n  switch (action.type) {\r\n    case \"ADD_TASK\":\r\n      return [...state, action.payload];\r\n\r\n    case \"ADD_TO_DONE\":\r\n      return [...state, action.payload];\r\n\r\n    case \"DELETE_TASK\":\r\n      return state.filter((state) => state.id !== action.payload);\r\n\r\n    case \"ADD_TASK_TO_EDIT\":\r\n      if (action.payload === null) return { ...state, task: [] };\r\n      return { ...state, task: [action.payload] };\r\n\r\n    case \"IS_EDITED\":\r\n      return { ...state, isEdited: action.payload };\r\n\r\n    case \"EDIT_TASK\":\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer, useEffect } from \"react\";\r\nimport TaskReducer from \"./TaskReducer\";\r\nimport { ITask } from \"../parameters/interfaces\";\r\n\r\ninterface ITaskContext {\r\n  state: ITask[];\r\n  addTask: (task: ITask) => void;\r\n  deleteTask: (id: number) => void;\r\n  editTask: (task: ITask) => void;\r\n}\r\n\r\nlet initialState: ITaskContext = localStorage.getItem(\"task\")\r\n  ? JSON.parse(localStorage.getItem(\"task\") || \"\")\r\n  : [];\r\n\r\nexport const TaskContext = createContext<ITaskContext>(initialState);\r\n\r\nconst TaskContextProvider: React.FC = ({ children }): JSX.Element => {\r\n  const [state, dispatch]: [ITask[], any] = useReducer(\r\n    TaskReducer,\r\n    initialState\r\n  );\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"task\", JSON.stringify(state));\r\n  }, [state]);\r\n\r\n  function addTask(task: ITask) {\r\n    dispatch({\r\n      type: \"ADD_TASK\",\r\n      payload: task,\r\n    });\r\n  }\r\n\r\n  function deleteTask(id: number) {\r\n    dispatch({\r\n      type: \"DELETE_TASK\",\r\n      payload: id,\r\n    });\r\n  }\r\n\r\n  function editTask({ title, description, id, date }: ITask) {\r\n    const newTask = state.map((task) =>\r\n      task.id === id ? { title, description, id, date } : task\r\n    );\r\n\r\n    dispatch({\r\n      type: \"EDIT_TASK\",\r\n      payload: newTask,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <TaskContext.Provider value={{ state, addTask, deleteTask, editTask }}>\r\n      {children}\r\n    </TaskContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TaskContextProvider;\r\n","import React, { createContext, useReducer, useEffect } from \"react\";\r\nimport TaskReducer from \"./TaskReducer\";\r\nimport { uniqueId } from \"../helpers/uniqueId\";\r\nimport { IDoneTask } from \"../parameters/interfaces\";\r\n\r\ninterface IdoneContext {\r\n  doneTaskState: IDoneTask[];\r\n  addToDone: (task: IDoneTask) => void;\r\n  deleteDoneTask: (id: number) => void;\r\n}\r\n\r\nconst initialState: IdoneContext = localStorage.getItem(\"doneTask\")\r\n  ? JSON.parse(localStorage.getItem(\"doneTask\") || \"\")\r\n  : [];\r\n\r\nexport const DoneTasksContext = createContext<IdoneContext>(initialState);\r\n\r\nconst DoneTaskProvider: React.FC = ({ children }): JSX.Element => {\r\n  const [doneTaskState, dispatch]: [IDoneTask[], any] = useReducer(\r\n    TaskReducer,\r\n    initialState\r\n  );\r\n\r\n  useEffect(\r\n    () => localStorage.setItem(\"doneTask\", JSON.stringify(doneTaskState)),\r\n    [doneTaskState]\r\n  );\r\n\r\n  function addToDone(task: IDoneTask) {\r\n    const doneDate: string = new Date().toLocaleString();\r\n\r\n    task.id = uniqueId(doneTaskState);\r\n    task.doneDate = doneDate;\r\n\r\n    dispatch({\r\n      type: \"ADD_TO_DONE\",\r\n      payload: task,\r\n    });\r\n  }\r\n\r\n  function deleteDoneTask(id: number) {\r\n    dispatch({\r\n      type: \"DELETE_TASK\",\r\n      payload: id,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <DoneTasksContext.Provider\r\n      value={{ doneTaskState, addToDone, deleteDoneTask }}\r\n    >\r\n      {children}\r\n    </DoneTasksContext.Provider>\r\n  );\r\n};\r\n\r\nexport default DoneTaskProvider;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { uniqueId } from \"../helpers/uniqueId\";\r\nimport {\r\n  showDoneTaskVariants,\r\n  expandVariants,\r\n  staggerBtnVariantsConteiner,\r\n  btnVariants,\r\n} from \"../parameters/variants\";\r\n\r\nimport { TaskContext } from \"../contexts/TaskContext\";\r\nimport { DoneTasksContext } from \"../contexts/AddToDone\";\r\n\r\nimport { ExpandMore, DeleteForever, Cached } from \"@material-ui/icons\";\r\n\r\nconst DoneTasks: React.FC = () => {\r\n  const { doneTaskState, deleteDoneTask } = useContext(DoneTasksContext);\r\n  const { state, addTask } = useContext(TaskContext);\r\n  const [expand, setExpand] = useState<null | number>(null);\r\n\r\n  if (!doneTaskState.length)\r\n    return (\r\n      <motion.p\r\n        className=\"no-match\"\r\n        initial={{ opacity: 0, y: -20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n      >\r\n        No Task Done\r\n      </motion.p>\r\n    );\r\n\r\n  return (\r\n    <motion.section\r\n      initial=\"initial\"\r\n      variants={showDoneTaskVariants}\r\n      animate=\"animate\"\r\n      exit=\"exit\"\r\n      className=\"done-tasks\"\r\n    >\r\n      {doneTaskState.map((task, index: number) => (\r\n        <motion.article\r\n          className=\"done-tasks__box\"\r\n          key={task.id}\r\n          positionTransition\r\n        >\r\n          <div className=\"done-tasks__title\">\r\n            <div className=\"title__heading-set\">\r\n              <span className=\"heading-set__index\">{index + 1}.</span>\r\n              <p className=\"heading-set__title\">{task.title}</p>\r\n            </div>\r\n            <motion.div\r\n              className=\"title__btn-set\"\r\n              variants={staggerBtnVariantsConteiner}\r\n              initial=\"initial\"\r\n              animate=\"animate\"\r\n            >\r\n              <motion.button\r\n                className=\"btn-set__btn \"\r\n                onClick={() => deleteDoneTask(task.id)}\r\n                variants={btnVariants}\r\n              >\r\n                <DeleteForever />\r\n              </motion.button>\r\n              <motion.button\r\n                className=\"btn-set__btn\"\r\n                onClick={async () => {\r\n                  await deleteDoneTask(task.id);\r\n                  delete task.doneDate;\r\n                  task.id = uniqueId(state);\r\n                  addTask(task);\r\n                }}\r\n                variants={btnVariants}\r\n              >\r\n                <Cached />\r\n              </motion.button>\r\n            </motion.div>\r\n          </div>\r\n          <div className=\"done-task__more-info\">\r\n            <AnimatePresence>\r\n              {expand === task.id && (\r\n                <motion.div\r\n                  className=\"more-info__details\"\r\n                  variants={expandVariants}\r\n                  animate=\"animate\"\r\n                  initial=\"initial\"\r\n                  exit=\"exit\"\r\n                  transition={{ duration: 0.2, ease: \"linear\", type: \"tween\" }}\r\n                >\r\n                  <p className=\"details__description\">{task.description}</p>\r\n                  <div className=\"details__date\">\r\n                    <span>Should Have Done: {task.date}</span>\r\n                    <span>Finised at: {task.doneDate}</span>\r\n                  </div>\r\n                </motion.div>\r\n              )}\r\n            </AnimatePresence>\r\n            <button\r\n              className={\r\n                expand === task.id\r\n                  ? \"more-info__expand-more more-info__expand-more--rotate \"\r\n                  : \"more-info__expand-more \"\r\n              }\r\n              onClick={() => {\r\n                if (task.id === expand) return setExpand(null);\r\n                setExpand(task.id);\r\n              }}\r\n            >\r\n              <ExpandMore />\r\n            </button>\r\n          </div>\r\n        </motion.article>\r\n      ))}\r\n    </motion.section>\r\n  );\r\n};\r\n\r\nexport default DoneTasks;\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport TaskReducer from \"./TaskReducer\";\r\nimport { ITask } from \"../parameters/interfaces\";\r\n\r\ninterface IeditState {\r\n  task: ITask[];\r\n  isEdited: boolean;\r\n}\r\n\r\ninterface IeditContext {\r\n  editedState: IeditState;\r\n  setEditMode: (isEdited: boolean) => void;\r\n  addTaskToEdit: (task: ITask | null) => void | null;\r\n}\r\n\r\nlet initialState: any = {\r\n  task: [],\r\n  isEdited: false,\r\n};\r\n\r\nexport const EditTaskContext = createContext<IeditContext>(initialState);\r\n\r\nconst EditTaskContextProvider: React.FC = ({ children }): JSX.Element => {\r\n  const [editedState, dispatch]: [IeditState, any] = useReducer(\r\n    TaskReducer,\r\n    initialState\r\n  );\r\n\r\n  function addTaskToEdit(task: ITask | null) {\r\n    if (task === null) return null;\r\n    if (editedState.task.length && editedState.task[0].id === task.id) {\r\n      task = null;\r\n      setEditMode(false);\r\n    }\r\n\r\n    dispatch({\r\n      type: \"ADD_TASK_TO_EDIT\",\r\n      payload: task,\r\n    });\r\n  }\r\n\r\n  function setEditMode(isEdited: boolean) {\r\n    dispatch({\r\n      type: \"IS_EDITED\",\r\n      payload: isEdited,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <EditTaskContext.Provider\r\n      value={{ editedState, addTaskToEdit, setEditMode }}\r\n    >\r\n      {children}\r\n    </EditTaskContext.Provider>\r\n  );\r\n};\r\n\r\nexport default EditTaskContextProvider;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { ITask } from \"../parameters/interfaces\";\r\nimport { motion } from \"framer-motion\";\r\nimport { editVariants } from \"../parameters/variants\";\r\n\r\nimport { EditTaskContext } from \"../contexts/EditTaskContext\";\r\nimport { TaskContext } from \"../contexts/TaskContext\";\r\n\r\nconst EditTask = () => {\r\n  const { editedState, setEditMode } = useContext(EditTaskContext);\r\n  const { editTask } = useContext(TaskContext);\r\n  const [newValue, setNewValue]: [ITask, any] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    date: \"\",\r\n    id: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (editedState.task.length) {\r\n      const [{ title, description, date, id }] = editedState.task;\r\n      setNewValue({\r\n        title: title,\r\n        description: description,\r\n        date: date,\r\n        id: id,\r\n      });\r\n    }\r\n  }, [editedState]);\r\n\r\n  return (\r\n    <motion.section\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      exit=\"left\"\r\n      variants={editVariants}\r\n      className=\"edit-section\"\r\n    >\r\n      <form\r\n        action=\"#\"\r\n        className=\"edit-section__edit-form\"\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          editTask(newValue);\r\n          setEditMode(false);\r\n        }}\r\n      >\r\n        <label htmlFor=\"edit-title\" className=\"edit-form__label\">\r\n          Edit Title\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"edit-title\"\r\n          name=\"edit-title\"\r\n          value={newValue.title}\r\n          onChange={(e) => setNewValue({ ...newValue, title: e.target.value })}\r\n          className=\"edit-form__input\"\r\n        />\r\n\r\n        <label htmlFor=\"edit-desc\" className=\"edit-form__label\">\r\n          Edit Description\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"edit-desc\"\r\n          name=\"edit-desc\"\r\n          value={newValue.description}\r\n          onChange={(e) =>\r\n            setNewValue({ ...newValue, description: e.target.value })\r\n          }\r\n          className=\"edit-form__input\"\r\n        />\r\n\r\n        <label htmlFor=\"edit-date\" className=\"edit-form__label\">\r\n          Edit Date\r\n        </label>\r\n        <input\r\n          type=\"date\"\r\n          id=\"edit-date\"\r\n          name=\"edit-date\"\r\n          value={newValue.date}\r\n          onChange={(e) => setNewValue({ ...newValue, date: e.target.value })}\r\n          className=\"edit-form__input\"\r\n        />\r\n\r\n        <button className=\"edit-form__edit-btn\" type=\"submit\">\r\n          Edit\r\n        </button>\r\n      </form>\r\n    </motion.section>\r\n  );\r\n};\r\n\r\nexport default EditTask;\r\n","import React, { useContext } from \"react\";\r\nimport EditTask from \"./EditTask\";\r\n\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { uniqueId } from \"../helpers/uniqueId\";\r\nimport { yourTaskVariants } from \"../parameters/variants\";\r\nimport {\r\n  staggerBtnVariantsConteiner,\r\n  btnVariants,\r\n} from \"../parameters/variants\";\r\n\r\nimport { TaskContext } from \"../contexts/TaskContext\";\r\nimport { DoneTasksContext } from \"../contexts/AddToDone\";\r\nimport { EditTaskContext } from \"../contexts/EditTaskContext\";\r\n\r\nimport { Edit, DeleteForever, Done } from \"@material-ui/icons\";\r\n\r\nconst YourTasks: React.FC = () => {\r\n  const { state, deleteTask } = useContext(TaskContext);\r\n  const { addToDone, doneTaskState } = useContext(DoneTasksContext);\r\n  const { editedState, addTaskToEdit, setEditMode } = useContext(\r\n    EditTaskContext\r\n  );\r\n\r\n  if (!state.length)\r\n    return (\r\n      <motion.p\r\n        className=\"no-match\"\r\n        initial={{ opacity: 0, y: -20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n      >\r\n        No Tasks...\r\n      </motion.p>\r\n    );\r\n\r\n  return (\r\n    <motion.section\r\n      className=\"current-tasks\"\r\n      variants={yourTaskVariants}\r\n      initial=\"initial\"\r\n      animate=\"animate\"\r\n      exit=\"exit\"\r\n    >\r\n      {state.map((task, index: number) => {\r\n        return (\r\n          <motion.article\r\n            key={task.id}\r\n            className=\"current-tasks__box\"\r\n            positionTransition\r\n          >\r\n            <AnimatePresence>\r\n              {editedState.task.length &&\r\n                editedState.task[0].id === task.id && <EditTask />}\r\n            </AnimatePresence>\r\n            <div className=\"current-tasks__title-box\">\r\n              <span className=\"title-box__number-task\">{index + 1}.</span>\r\n              <h5 className=\"title-box__title\">{task.title}</h5>\r\n              <motion.div\r\n                className=\"title-box__btn-set\"\r\n                variants={staggerBtnVariantsConteiner}\r\n                initial=\"initial\"\r\n                animate=\"animate\"\r\n              >\r\n                <motion.button\r\n                  className=\"btn-set__btn\"\r\n                  variants={btnVariants}\r\n                  onClick={async () => {\r\n                    await deleteTask(task.id);\r\n                    task.id = uniqueId(doneTaskState);\r\n                    addToDone(task);\r\n                  }}\r\n                >\r\n                  <Done />\r\n                </motion.button>\r\n                <motion.button\r\n                  className={\r\n                    editedState.task.length &&\r\n                    editedState.task[0].id === task.id\r\n                      ? \"btn-set__btn btn-set__btn--active\"\r\n                      : \"btn-set__btn\"\r\n                  }\r\n                  variants={btnVariants}\r\n                  onClick={() => {\r\n                    setEditMode(true);\r\n                    addTaskToEdit(task);\r\n                  }}\r\n                >\r\n                  <Edit />\r\n                </motion.button>\r\n                <motion.button\r\n                  variants={btnVariants}\r\n                  className=\"btn-set__btn\"\r\n                  onClick={() => deleteTask(task.id)}\r\n                >\r\n                  <DeleteForever />\r\n                </motion.button>\r\n              </motion.div>\r\n            </div>\r\n            <div className=\"current-tasks__desc\">\r\n              <span className=\"desc__label\">Description:</span>\r\n              {task.description}\r\n            </div>\r\n            <div className=\"current-tasks__date\">\r\n              <span className=\"date__label\">Deadline:</span>\r\n              {task.date}\r\n            </div>\r\n          </motion.article>\r\n        );\r\n      })}\r\n    </motion.section>\r\n  );\r\n};\r\n\r\nexport default YourTasks;\r\n","import React from \"react\";\r\nimport { errorVariants } from \"../parameters/variants\";\r\nimport { uniqueId } from \"../helpers/uniqueId\";\r\nimport { motion } from \"framer-motion\";\r\nimport { ITask } from \"../parameters/interfaces\";\r\n\r\ninterface Imessage {\r\n  message: string;\r\n  id: number;\r\n}\r\n\r\nconst Error = ({ newTask }: { newTask: ITask }) => {\r\n  const messages: Imessage[] = [];\r\n\r\n  if (!newTask.title)\r\n    messages.push({\r\n      message: \"Title should be filled\",\r\n      id: uniqueId(messages),\r\n    });\r\n\r\n  if (!newTask.date) {\r\n    messages.push({\r\n      message: \"Date should be seted\",\r\n      id: uniqueId(messages),\r\n    });\r\n  }\r\n\r\n  return (\r\n    <motion.section\r\n      variants={errorVariants}\r\n      animate=\"animate\"\r\n      initial=\"initial\"\r\n      exit=\"exit\"\r\n    >\r\n      <ul className=\"error-box\">\r\n        {messages.map(({ id, message }) => (\r\n          <motion.li\r\n            key={id}\r\n            className=\"error-box__error-name\"\r\n            positionTransition\r\n          >\r\n            {message}\r\n          </motion.li>\r\n        ))}\r\n      </ul>\r\n    </motion.section>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\nimport { successVaraints } from \"../parameters/variants\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport default function Success() {\r\n  return (\r\n    <motion.section\r\n      className=\"success-alert\"\r\n      variants={successVaraints}\r\n      animate=\"animate\"\r\n      initial=\"initial\"\r\n      exit=\"exit\"\r\n    >\r\n      <h5>Task has added!</h5>\r\n    </motion.section>\r\n  );\r\n}\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport Error from \"./Error\";\r\nimport Success from \"./Success\";\r\n\r\nimport { TaskContext } from \"../contexts/TaskContext\";\r\nimport { uniqueId } from \"../helpers/uniqueId\";\r\nimport { showFormVaraints } from \"../parameters/variants\";\r\n\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { ITask } from \"../parameters/interfaces\";\r\n\r\nconst AddTask: React.FC = () => {\r\n  const { state, addTask } = useContext(TaskContext);\r\n  const [newTask, setNewTask] = useState<ITask>({\r\n    title: \"\",\r\n    description: \"\",\r\n    date: \"\",\r\n    id: 0,\r\n  });\r\n  const [error, setError] = useState<boolean>(false);\r\n  const [success, setSuccess] = useState<boolean>(false);\r\n  const [submited, setSubmit] = useState<boolean>(false);\r\n\r\n  const createTaskHandler = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (error) return;\r\n\r\n    newTask.id = uniqueId(state);\r\n    addTask(newTask);\r\n    setNewTask({ title: \"\", description: \"\", date: \"\", id: 0 });\r\n    successAlert();\r\n    setSubmit(false);\r\n  };\r\n\r\n  const successAlert = () => {\r\n    setSuccess(true);\r\n    setTimeout(() => setSuccess(false), 3000);\r\n  };\r\n\r\n  const changeInputHandler = (e: any) =>\r\n    setNewTask({ ...newTask, [e.target.name]: e.target.value });\r\n\r\n  useEffect(() => {\r\n    if (!submited) return;\r\n    if (!newTask.title || !newTask.date) setError(true);\r\n    else setError(false);\r\n  }, [submited, newTask]);\r\n\r\n  useEffect(() => () => setSuccess(false), []);\r\n\r\n  return (\r\n    <section>\r\n      <motion.form\r\n        action=\"#\"\r\n        className=\"form\"\r\n        onSubmit={(e) => createTaskHandler(e)}\r\n        variants={showFormVaraints}\r\n        initial=\"initial\"\r\n        animate=\"animate\"\r\n        exit=\"exit\"\r\n        transition={{ type: \"tween\" }}\r\n      >\r\n        <AnimatePresence> {success && <Success />}</AnimatePresence>\r\n        <AnimatePresence>\r\n          {error && <Error newTask={newTask} />}\r\n        </AnimatePresence>\r\n        <label htmlFor=\"add-task-title\" className=\"form__add-task-label\">\r\n          Task Title\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form__add-task-input\"\r\n          name=\"title\"\r\n          value={newTask.title}\r\n          id=\"add-task-title\"\r\n          autoComplete=\"off\"\r\n          onChange={(e) => changeInputHandler(e)}\r\n        />\r\n        <label htmlFor=\"add-task-desc\" className=\"form__add-task-label\">\r\n          Task Description\r\n        </label>\r\n        <textarea\r\n          name=\"description\"\r\n          value={newTask.description}\r\n          id=\"add-task-desc\"\r\n          className=\"form__add-task-input form__add-task-input--description\"\r\n          autoComplete=\"off\"\r\n          onChange={(e) => changeInputHandler(e)}\r\n        ></textarea>\r\n        <label htmlFor=\"task-deadline\" className=\"form__add-task-label\">\r\n          Select Deadline\r\n        </label>\r\n        <input\r\n          type=\"date\"\r\n          name=\"date\"\r\n          value={newTask.date}\r\n          id=\"task-deadline\"\r\n          className=\"form__add-task-input\"\r\n          autoComplete=\"off\"\r\n          onChange={(e) => changeInputHandler(e)}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"form__add-btn\"\r\n          onClick={() => setSubmit(true)}\r\n        >\r\n          Add Task\r\n        </button>\r\n      </motion.form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import DoneTasks from \"../components/DoneTasks\";\r\nimport YourTasks from \"../components/YourTasks\";\r\nimport AddTask from \"../components/AddTask\";\r\n\r\ninterface Ilinks {\r\n  pathname: string;\r\n  text: string;\r\n  id: number;\r\n}\r\n\r\nexport const links: Ilinks[] = [\r\n  { pathname: \"/addtask\", text: \"Add Task\", id: 0 },\r\n  { pathname: \"/\", text: \"Your Tasks\", id: 1 },\r\n  { pathname: \"/donetasks\", text: \"Your Done Tasks\", id: 2 },\r\n];\r\n\r\ninterface Iroutes {\r\n  path: string;\r\n  component: React.FC;\r\n  id: number;\r\n}\r\n\r\nexport const routes: Iroutes[] = [\r\n  { path: \"/addtask\", component: AddTask, id: 0 },\r\n  { path: \"/\", component: YourTasks, id: 1 },\r\n  { path: \"/donetasks\", component: DoneTasks, id: 2 },\r\n];\r\n","import React from \"react\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1 className=\"header__heading\">To Do List</h1>\r\n    </header>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { links } from \"../parameters/config\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport { routes } from \"../parameters/config\";\r\n\r\nconst NavBar = () => {\r\n  const [history, setHistory] = useState<number[]>([]);\r\n  const [update, setUpdate] = useState<boolean>(false);\r\n  let [prevNumber, currentNumber] = history;\r\n  const location: any = useLocation();\r\n\r\n  useEffect(\r\n    () =>\r\n      routes.forEach((route, index: number) => {\r\n        if (route.path === location.pathname) setHistory([...history, index]);\r\n      }),\r\n    [update]\r\n  );\r\n\r\n  if (history.length > 2) history.shift();\r\n\r\n  return (\r\n    <nav className=\"nav\">\r\n      <ul className=\"nav__link-conteiner\">\r\n        {links.map((link) => (\r\n          <li className=\"nav__item\" key={link.id}>\r\n            <NavLink\r\n              exact\r\n              to={{ pathname: link.pathname, state: link.id }}\r\n              className=\"nav__link\"\r\n              data-text={link.text}\r\n              onClick={() => setUpdate(!update)}\r\n            >\r\n              {link.text}\r\n            </NavLink>\r\n            <span\r\n              className={\r\n                prevNumber > currentNumber && currentNumber === link.id\r\n                  ? \"nav__overlay nav__overlay--slide-left\"\r\n                  : \"nav__overlay\" &&\r\n                    prevNumber > currentNumber &&\r\n                    prevNumber === link.id\r\n                  ? \"nav__overlay nav__overlay--slide-left-hide\"\r\n                  : \"nav__overlay\" &&\r\n                    prevNumber < currentNumber &&\r\n                    currentNumber === link.id\r\n                  ? \"nav__overlay nav__overlay--slide-right\"\r\n                  : \"nav__overlay\" &&\r\n                    prevNumber < currentNumber &&\r\n                    prevNumber === link.id\r\n                  ? \"nav__overlay nav__overlay--slide-right-hide\"\r\n                  : \"nav__overlay\" &&\r\n                    prevNumber === link.id &&\r\n                    currentNumber === undefined\r\n                  ? \"nav__overlay nav__overlay--slide-left\"\r\n                  : \"nav__overlay\"\r\n              }\r\n            ></span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\nimport \"./scss/App.scss\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { routes } from \"./parameters/config\";\n\nimport Header from \"./components/Header\";\nimport NavBar from \"./components/NavBar\";\n\nimport TaskContextProvider from \"./contexts/TaskContext\";\nimport DoneTasksProvider from \"./contexts/AddToDone\";\nimport EditTaskContextProvider from \"./contexts/EditTaskContext\";\n\nconst ToDoList = () => {\n  return (\n    <Router basename=\"/\">\n      <main>\n        <Header />\n        <NavBar />\n        <TaskContextProvider>\n          <DoneTasksProvider>\n            <Route\n              render={({ location }) => (\n                <AnimatePresence exitBeforeEnter>\n                  <Switch location={location} key={location.pathname}>\n                    <EditTaskContextProvider>\n                      {routes.map((route) => (\n                        <Route\n                          key={route.id}\n                          exact\n                          component={route.component}\n                          path={route.path}\n                        />\n                      ))}\n                    </EditTaskContextProvider>\n                  </Switch>\n                </AnimatePresence>\n              )}\n            />\n          </DoneTasksProvider>\n        </TaskContextProvider>\n      </main>\n    </Router>\n  );\n};\n\nexport default ToDoList;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./ToDoList\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}